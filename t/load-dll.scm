(import (scheme base)
        (scheme load)
        (scheme time)
        (scheme write))
(load "hello.so")
(hello)

(display "* loading library (scheme tak)")
(newline)
(import (scheme tak))
(define (time f)
  (let ((start (current-jiffy)))
    (f)
    (/ (- (current-jiffy) start)
       (jiffies-per-second))))
(define (tak x y z)
  (if (> x y)
      (tak (tak (- x 1) y z)
	   (tak (- y 1) z x)
	   (tak (- z 1) x y))
      y))
(define (scm) (tak 12 6 0))
(define (c) (c-tak 12 6 0))
(display "* tak comparison")(newline)
(display "tak written by scheme")(newline)
(write-simple (time scm))(newline)
(display "tak written by C")(newline)
(write-simple (time c))(newline)
(newline)



